let placeable;
let scale = 1;
let scene = game.canvas.scene;
let x;
let y;
let ping = false;
const tagger = game.modules.get("tagger")?.active;

if (typeof scope !== "undefined" && scope && Object.keys(scope).length > 0) {

    if (scope.scene) {
        scene = game.scenes.get(scope.scene);
        if (!scene) {
            scene = game.scenes.getName(scope.scene);
        }
    }

    if (scope.label) {
        placeable = scene?.notes.find(n => n.label === scope.label);
    } else if (scope.text) {
        placeable = scene?.drawings.find(d => d.text === scope.text);
    } else if (scope.name) {
        placeable = scene?.tokens.find(t => t.name === scope.name);
    } else if (tagger && scope.tag) {
        placeable = Tagger.getByTag("test")[0];
    }

    if (scope.uuid) {
        placeable = await fromUuid(scope.uuid);
        scene = placeable.parent;
    }

    if (placeable) {
        x = placeable.x;
        y = placeable.y;
    } else if (scope.x && scope.y) {
        x = scope.x;
        y = scope.y;
    }

    if (scope.scale) {
        scale = scope.scale;
    }

    if (["y", "yes", "t", "true"].includes(scope.ping)) {
        ping = true;
    } else if (["n", "no", "f", "false"].includes(scope.ping)) {
        ping = false;
    }

    if (x && y) {
        if (scene !== game.canvas.scene) {
            await scene.view();
        }
        await canvas.pan({
            x: parseInt(x),
            y: parseInt(y),
            scale: Number(scale)
        });
        if (ping) {
            canvas.ping({
                x: parseInt(x),
                y: parseInt(y)
            }, {
                pull: false
            })
        }

    }

}
